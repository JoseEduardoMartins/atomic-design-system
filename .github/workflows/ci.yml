name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check test coverage
        run: |
          echo "üìä Checking test coverage..."

          # Executa testes com cobertura e captura a sa√≠da
          COVERAGE_OUTPUT=$(npm run test:coverage -- --reporter=text --coverage.reporter=text 2>&1)
          echo "$COVERAGE_OUTPUT"

          # Extrai a cobertura geral
          COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep "All files" | awk '{print $4}' | sed 's/%//')
          echo "üìà Overall coverage: $COVERAGE%"

          # Extrai cobertura dos componentes principais
          COMPONENT_COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep -E "(Button|Label|Title|InputWithLabel|SimpleForm)" | awk '{print $4}' | sed 's/%//' | tr '\n' ' ')
          echo "üß© Component coverage: $COMPONENT_COVERAGE"

          # Verifica se a cobertura geral est√° acima do m√≠nimo
          if [ -z "$COVERAGE" ]; then
            echo "‚ùå Could not extract coverage information"
            exit 1
          fi

          if (( $(echo "$COVERAGE < 30" | bc -l) )); then
            echo "‚ùå Coverage is too low: $COVERAGE% (minimum: 30%)"
            exit 1
          fi

          echo "‚úÖ Coverage is acceptable: $COVERAGE%"

      - name: Build
        run: npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Show build artifacts
        run: |
          echo "üì¶ Build artifacts:"
          ls -la dist/
          echo "üìä Coverage artifacts:"
          ls -la coverage/
